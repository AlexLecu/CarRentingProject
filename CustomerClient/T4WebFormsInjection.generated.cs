// <autogenerated>
//   Do not modify this file manually. Any changes will be lost next time the code is regenerated.
// </autogenerated>

namespace CustomerClient
{
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Runtime.CompilerServices;

    public static class T4WebFormsInjection
	{
		internal static class DependencyManager
	    {
            private static ConditionalWeakTable<object, DependencyTracker> Tracker;

	        static DependencyManager()
	        {
                DependencyManager.Tracker = new ConditionalWeakTable<object, DependencyTracker>();
            }

	        public static void Track(object target, DependencyTracker dependencyTracker)
	        {
                DependencyManager.Tracker.Add(target, dependencyTracker);
	        }
	    }

        internal class DependencyTracker
        {
            private readonly List<object> trackedObjects;

	        internal DependencyTracker(int capacity = 1)
	        {
	            this.trackedObjects = new List<object>(capacity);
	        }

			internal T Add<T>(T o)
			{
				this.trackedObjects.Add(o);
				return o;
			}
            /*
	        internal void Release()
	        {
	            foreach (var trackedObject in this.trackedObjects)
	            {
					Container.Release(trackedObject);
	            }

				this.trackedObjects.Clear();
	        }
            
	        ~DependencyTracker()
	        {
	            this.Release();
	        }
            */
	    }
	}
}

